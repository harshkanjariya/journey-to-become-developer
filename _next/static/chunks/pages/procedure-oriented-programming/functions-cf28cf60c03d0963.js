(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[476],{5652:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/procedure-oriented-programming/functions",function(){return t(7670)}])},7670:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return o}});var r=t(5893);function i(n){return n.trim().replaceAll("\n","<br/>").replaceAll(/\s/g,"&nbsp;")}function o(){return(0,r.jsxs)("div",{className:"container",children:[(0,r.jsx)("h3",{children:"function that returns nothing and accepts nothing"}),"i.e. ",(0,r.jsx)("br",{}),(0,r.jsx)("div",{className:"code",dangerouslySetInnerHTML:{__html:i('\nint score = 0;\n\nvoid gameOver() {\n  printf("GAME OVER!!!");\n  score = 0;\n}\nint main () {\n  // some variables ...\n  // some code to start game ...\n  while(true) {\n    if (// some condition) {\n       gameOver();\n       break;\n    }\n    // continuous game code\n    // some code like score++\n  }\n}\n')}}),(0,r.jsx)("h3",{children:"function that returns nothing but accepts something"}),"i.e. ",(0,r.jsx)("br",{}),(0,r.jsx)("div",{className:"code",dangerouslySetInnerHTML:{__html:i("\nvoid () {\n}\nint main () {\n  \n}\n")}})]})}}},function(n){n.O(0,[774,888,179],function(){return n(n.s=5652)}),_N_E=n.O()}]);